generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
  user              User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@id([provider, providerAccountId])
  @@map("accounts")
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String    @unique
  emailVerified DateTime?
  passwordHash  String?
  image         String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime?
  accounts      Account[]

  @@map("users")
}

model companystatus {
  status_id                                        Int         @id @default(autoincrement())
  status                                           String?
  companies_companies_companystatusTocompanystatus Company[] @relation("companies_companystatusTocompanystatus")

  @@map("companystatus")
}

model sic_codes {
  sic_id                              Int         @id
  sic_section_name                    String?
  sic_section_id                      String?
  sic_text                            String?
  companies_companies_sic1Tosic_codes Company[] @relation("companies_sic1Tosic_codes")
  companies_companies_sic2Tosic_codes Company[] @relation("companies_sic2Tosic_codes")
  companies_companies_sic3Tosic_codes Company[] @relation("companies_sic3Tosic_codes")
  companies_companies_sic4Tosic_codes Company[] @relation("companies_sic4Tosic_codes")

  @@map("sic_codes")
}

model Token {
  id      String    @id @default(cuid())
  email   String
  token   String
  expires DateTime
  type    TokenType

  @@unique([email, token])
  @@map("tokens")
}

model Company {
  @@map("companies")
  id                                                   Int            @id @default(autoincrement())
  companyname                                          String?
  companynumber                                        String?
  careof                                               String?
  pobox                                                String?
  addressline1                                         String?
  addressline2                                         String?
  posttown                                             String?
  county                                               String?
  country                                              String?
  postcode                                             String?
  companycategory                                      String?
  companystatus                                        Int?
  countryoforigin                                      String?
  dissolutiondate                                      DateTime?      @db.Timestamp(6)
  incorporationdate                                    DateTime?      @db.Timestamp(6)
  accountrefday                                        Int?
  accountrefmonth                                      Int?
  accountsnextduedate                                  DateTime?      @db.Timestamp(6)
  accountslastmadeupdate                               DateTime?      @db.Timestamp(6)
  accountscategory                                     String?
  returnslastmadeupdate                                DateTime?      @db.Timestamp(6)
  returnsnextduedate                                   DateTime?      @db.Timestamp(6)
  nummortcharges                                       Int?
  nummortoutstanding                                   Int?
  nummortpartsatisfied                                 Int?
  nummortsatisfied                                     Int?
  sic1                                                 Int?
  sic2                                                 Int?
  sic3                                                 Int?
  sic4                                                 Int?
  numgenpartners                                       Int?
  numlimpartners                                       Int?
  uri                                                  String?
  previousname_1condate                                DateTime?      @db.Timestamp(6)
  previousname_1companyname                            String?
  previousname_2condate                                DateTime?      @db.Timestamp(6)
  previousname_2companyname                            String?
  previousname_3condate                                DateTime?      @db.Timestamp(6)
  previousname_3companyname                            String?
  previousname_4condate                                DateTime?      @db.Timestamp(6)
  previousname_4companyname                            String?
  previousname_5condate                                DateTime?      @db.Timestamp(6)
  previousname_5companyname                            String?
  previousname_6condate                                DateTime?      @db.Timestamp(6)
  previousname_6companyname                            String?
  previousname_7condate                                DateTime?      @db.Timestamp(6)
  previousname_7companyname                            String?
  previousname_8condate                                DateTime?      @db.Timestamp(6)
  previousname_8companyname                            String?
  previousname_9condate                                DateTime?      @db.Timestamp(6)
  previousname_9companyname                            String?
  previousname_10condate                               DateTime?      @db.Timestamp(6)
  previousname_10companyname                           String?
  confstmtlastduedate                                  DateTime?      @db.Timestamp(6)
  confstmtlastmadeupdate                               DateTime?      @db.Timestamp(6)
  companystatus_companies_companystatusTocompanystatus companystatus? @relation("companies_companystatusTocompanystatus", fields: [companystatus], references: [status_id], onDelete: NoAction, onUpdate: NoAction)
  sic_codes_companies_sic1Tosic_codes                  sic_codes?     @relation("companies_sic1Tosic_codes", fields: [sic1], references: [sic_id], onDelete: NoAction, onUpdate: NoAction)
  sic_codes_companies_sic2Tosic_codes                  sic_codes?     @relation("companies_sic2Tosic_codes", fields: [sic2], references: [sic_id], onDelete: NoAction, onUpdate: NoAction)
  sic_codes_companies_sic3Tosic_codes                  sic_codes?     @relation("companies_sic3Tosic_codes", fields: [sic3], references: [sic_id], onDelete: NoAction, onUpdate: NoAction)
  sic_codes_companies_sic4Tosic_codes                  sic_codes?     @relation("companies_sic4Tosic_codes", fields: [sic4], references: [sic_id], onDelete: NoAction, onUpdate: NoAction)
}

enum TokenType {
  VERIFICATION
  PASSWORD_RESET
}
